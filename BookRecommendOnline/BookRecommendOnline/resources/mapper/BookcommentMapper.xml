<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookrecommendonline.mapper.BookcommentMapper">
  <resultMap id="BaseResultMap" type="com.bookrecommendonline.entity.BookcommentEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bookrecommendonline.entity.BookcommentEntity">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  
  <!--   关联结果集合 -->
  <resultMap extends="ResultMapWithBLOBs" id="BaseResultMapJoin" type="com.bookrecommendonline.entity.BookcommentEntity">
<!--     关联用户 -->
    <association property="userEntity" javaType="com.bookrecommendonline.entity.UserEntity">
		<id column="u_id" jdbcType="INTEGER" property="id" />
	    <result column="u_username" jdbcType="VARCHAR" property="username" />
	    <result column="u_password" jdbcType="VARCHAR" property="password" />
	    <result column="u_header" jdbcType="VARCHAR" property="header" />
	    <result column="u_gender" jdbcType="INTEGER" property="gender" />
	    <result column="u_age" jdbcType="INTEGER" property="age" />
	    <result column="u_phone" jdbcType="VARCHAR" property="phone" />
	    <result column="u_email" jdbcType="VARCHAR" property="email" />
	    <result column="u_lastlogintime" jdbcType="VARCHAR" property="lastlogintime" />
	    <result column="u_state" jdbcType="INTEGER" property="state" />
	    <result column="u_createtime" jdbcType="VARCHAR" property="createtime" />
	</association>
<!-- 	关联图书 -->
	<association property="bookEntity" javaType="com.bookrecommendonline.entity.BookEntity">
		<id column="m_id" jdbcType="INTEGER" property="id" />
	    <result column="m_bookname" jdbcType="VARCHAR" property="bookname" />
	    <result column="m_booktypeid" jdbcType="INTEGER" property="booktypeid" />
	    <result column="m_image" jdbcType="VARCHAR" property="image" />
	    <result column="m_author" jdbcType="VARCHAR" property="author" />
    	<result column="m_press" jdbcType="VARCHAR" property="press" />
    	<result column="m_price" jdbcType="VARCHAR" property="price" />
    	<result column="m_isbn" jdbcType="VARCHAR" property="isbn" />
	    <result column="m_doubanid" jdbcType="VARCHAR" property="doubanid" />
	    <result column="m_createtime" jdbcType="VARCHAR" property="createtime" />
	</association>
  </resultMap>
  
  <!--   关联结果集合，同时关联 评分记录数据 -->
  <resultMap extends="BaseResultMapJoin" id="BaseResultMapJoinEx" type="com.bookrecommendonline.entity.BookcommentEntity">
<!--     关联用户评分 -->
    <association property="bookscoreEntity" javaType="com.bookrecommendonline.entity.BookscoreEntity">
		<id column="s_id" jdbcType="INTEGER" property="id" />
	    <result column="s_userid" jdbcType="INTEGER" property="userid" />
	    <result column="s_bookid" jdbcType="INTEGER" property="bookid" />
	    <result column="s_score" jdbcType="INTEGER" property="score" />
	    <result column="s_createtime" jdbcType="VARCHAR" property="createtime" />
	</association>
  </resultMap>
  
<!--   关联查询结果 -->
  <sql id="Base_Column_List_Join">
    co.*,
   	u.id as u_id, u.username as u_username, u.password as u_password, 
   	u.header as u_header, u.gender as u_gender, u.age as u_age, u.phone as u_phone, 
   	u.email as u_email, u.lastlogintime as u_lastlogintime, u.state as u_state, 
    u.createtime as u_createtime, 
    m.id as m_id, m.bookname as m_bookname, m.booktypeid as m_booktypeid, 
    m.image as m_image, 
	m.author as m_author, m.press as m_press, m.price as m_price, m.isbn as m_isbn,
	m.doubanid as m_doubanid, m.createtime as m_createtime 
  </sql>
  
  <!--   关联查询结果，同时关联 评分记录数据 -->
  <sql id="Base_Column_List_Join_Ex">
    co.*,
   	u.id as u_id, u.username as u_username, u.password as u_password, 
   	u.header as u_header, u.gender as u_gender, u.age as u_age, u.phone as u_phone, 
   	u.email as u_email, u.lastlogintime as u_lastlogintime, u.state as u_state, 
    u.createtime as u_createtime, 
    m.id as m_id, m.bookname as m_bookname, m.booktypeid as m_booktypeid, 
    m.image as m_image, 
	m.author as m_author, m.press as m_press, m.price as m_price, m.isbn as m_isbn,
	m.doubanid as m_doubanid, m.createtime as m_createtime , 
    s.id as s_id, s.userid as s_userid, s.bookid as s_bookid, s.score as s_score, s.createtime as s_createtime 
  </sql>
  
  <sql id="Base_Column_List">
    id, userid, bookid, createtime
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from db_bookcomment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from db_bookcomment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bookrecommendonline.entity.BookcommentEntity">
    insert into db_bookcomment (id, userid, bookid, 
      createtime, content)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bookrecommendonline.entity.BookcommentEntity">
    insert into db_bookcomment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="bookid != null">
        bookid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookrecommendonline.entity.BookcommentEntity">
    update db_bookcomment
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        bookid = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bookrecommendonline.entity.BookcommentEntity">
    update db_bookcomment
    set userid = #{userid,jdbcType=INTEGER},
      bookid = #{bookid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookrecommendonline.entity.BookcommentEntity">
    update db_bookcomment
    set userid = #{userid,jdbcType=INTEGER},
      bookid = #{bookid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!--   带参数查询 -->
  <select id="find" resultMap="BaseResultMap" >
    select 
    	<include refid="Base_Column_List" />
    from db_bookcomment
    where 1=1 
	    <include refid="com.bookrecommendonline.mapper.BaseMapper.Base_Param_List" />
    order by id desc
  </select>
  
<!--   带参数关联查询 -->
  <select id="findJoin" resultMap="BaseResultMapJoin" >
    select 
    	<include refid="Base_Column_List_Join" /> 
    from db_bookcomment co
    left join db_user u on u.id = co.userid  
    left join db_book m on m.id = co.bookid 
    where 1=1 
    	<include refid="com.bookrecommendonline.mapper.BaseMapper.Base_Param_List" />
    order by co.id desc
  </select>
  
<!--   带参数查询一个 -->
  <select id="findFirst" resultMap="BaseResultMap" >
    select 
    	<include refid="Base_Column_List" />
    from db_bookcomment
    where 1=1 
    	<include refid="com.bookrecommendonline.mapper.BaseMapper.Base_Param_List" />
    order by id desc 
    limit 0,1
  </select>
  
  <!--   带参数关联查询一个 -->
  <select id="findFirstJoin" resultMap="BaseResultMapJoin" >
    select 
    	<include refid="Base_Column_List_Join" /> 
    from db_bookcomment co
    left join db_user u on u.id = co.userid  
    left join db_book m on m.id = co.bookid 
    where 1=1 
    	<include refid="com.bookrecommendonline.mapper.BaseMapper.Base_Param_List" /> 
    order by co.id desc 
    limit 0,1
  </select>
  
  <!--   带参数聚合查询 -->
  <select id="findCount" resultType="java.lang.Long">
    select count(id) from db_bookcomment
    where 1=1 
    	<include refid="com.bookrecommendonline.mapper.BaseMapper.Base_Param_List" />
  </select>
  
  <!--   带参数关联查询，同时关联 评分记录数据 -->
  <select id="findJoinEx" resultMap="BaseResultMapJoinEx" >
    select 
    	<include refid="Base_Column_List_Join_Ex" /> 
    from db_bookcomment co
    left join db_user u on u.id = co.userid  
    left join db_book m on m.id = co.bookid 
    left join db_bookscore s on (co.bookid = s.bookid and co.userid = s.userid)
    where 1=1 
    	<include refid="com.bookrecommendonline.mapper.BaseMapper.Base_Param_List" />
    order by co.id desc
  </select>
  
</mapper>